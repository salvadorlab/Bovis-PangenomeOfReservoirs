2
setwd("../../../Documents/Bovis-PangenomeOfReservoirs/Resources/")
assembly_stats <- read.csv("mbovis_transposed_report.csv",header = TRUE)
summary(assembly_stats$X..contigs)
length(assembly_stats$X..contigs)
length(assembly_stats$X..contigs[assembly_stats$X..contigs < 200,])
length(assembly_stats$X..contigs[assembly_stats$X..contigs < 200])
summary(assembly_stats$N50)
N50_firstpeak <- subset(assembly_stats, assembly_stats$N50 < 125000)
N50_secondpeak <- subset(assembly_stats, assembly_stats$N50 > 125000)
accession_meta <- read.csv("ProjectBovisReservoir_metadata.csv", header = TRUE, stringsAsFactors = FALSE)
names <- gsub('.scaffold','',assembly_stats$ï..Assembly)
assembly_stats$names <- names
View(assembly_stats)
View(assembly_stats)
assembly_stats$names
library(magrittr)
View(accession_meta)
accession_meta$ï..Sample t
assembly_stats <- assembly_stats %>% left_join(accession_meta,by=c("name = ï..Sample"))
library(dplyr)
assembly_stats <- assembly_stats %>% left_join(accession_meta,by=c("name = ï..Sample"))
assembly_stats <- assembly_stats %>% left_join(accession_meta,by=c("name" = "ï..Sample"))
assembly_stats <- read.csv("mbovis_transposed_report.csv",header = TRUE)
assembly_stats$names <- names
assembly_stats <- assembly_stats %>% left_join(accession_meta,by=c("names" = "ï..Sample"))
N50_firstpeak <- subset(assembly_stats, assembly_stats$N50 < 125000)
N50_secondpeak <- subset(assembly_stats, assembly_stats$N50 > 125000)
View(N50_firstpeak)
View(N50_secondpeak)
N50_firstpeak %>% group_by(Country) %>% summarise(country_sum = sum(Country))
N50_firstpeak %>% group_by(Country) %>% summarise(country_sum = sum(factor(Country)))
N50_firstpeak %>% group_by(Country) %>% summarise(country_sum = length(Country))
N50_secondpeak %>% group_by(Country) %>% summarise(country_sum = length(Country))
N50_firstpeak %>% group_by(Host) %>% summarise(host_sum = length(Host))
N50_secondpeak %>% group_by(Host) %>% summarise(host_sum = length(Host))
length(assembly_stats$GC....)
length(assembly_stats$GC.... == 65.5)
summary(assembly_stats$GC....)
length(assembly_stats$GC....,[assembly_stats$GC.... > 64.99 & assembly_stats$GC.... < 65.99])
length(assembly_stats$GC....,[assembly_stats$GC.... > 64.99 & assembly_stats$GC.... < 65.99,])
length(assembly_stats$GC....[assembly_stats$GC.... > 64.99 & assembly_stats$GC.... < 65.99,])
length(assembly_stats$GC....[assembly_stats$GC.... > 64.99 & assembly_stats$GC.... < 65.99])
length(assembly_stats$GC....[assembly_stats$Genome.fraction.... > 95])
length(assembly_stats$GC....[assembly_stats$Genome.fraction.... > 98])
length(assembly_stats$GC....[assembly_stats$Genome.fraction.... > 96])
length(assembly_stats$GC....[assembly_stats$Genome.fraction.... > 97])
summary(assembly_stats$X..misassemblies)
length(assembly_stats$X..misassemblies[assembly_stats$X..misassemblies == 0.00])
length(assembly_stats$X..misassemblies[assembly_stats$X..misassemblies < 5.00])
length(assembly_stats$X..misassemblies[assembly_stats$X..misassemblies < 7.00])
length(assembly_stats$X..misassemblies[assembly_stats$X..misassemblies < 10.00])
length(assembly_stats$X..misassemblies[assembly_stats$X..misassemblies < 15.00])
length(assembly_stats$X..misassemblies[assembly_stats$X..misassemblies < 20.00])
